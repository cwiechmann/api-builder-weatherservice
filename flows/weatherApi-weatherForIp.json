{
	"schemaVersion": "4",
	"info": {
		"name": "weatherForIp"
	},
	"parameter": {
		"properties": {
			"params": {
				"type": "object",
				"description": "The parameters from the endpoint."
			},
			"request": {
				"type": "object",
				"description": "The HTTP request."
			},
			"config": {
				"type": "object",
				"description": "The service's configuration"
			},
			"env": {
				"type": "object",
				"description": "The host OS environment"
			}
		},
		"additionalProperties": false,
		"required": [
			"params",
			"request",
			"config",
			"env"
		]
	},
	"start": "IPAPI.1",
	"nodes": {
		"http.setresponse.1": {
			"type": "nodehandler://axway-flow/http",
			"method": "setresponse",
			"name": "200 OK",
			"parameters": [
				{
					"name": "status",
					"value": "200",
					"type": "number",
					"metaName": "status",
					"metaDescription": "The HTTP status code"
				},
				{
					"name": "body",
					"type": "jsonpath",
					"value": "$.finalResponse",
					"metaName": "body",
					"metaDescription": "The response payload"
				}
			],
			"outputs": {
				"next": {
					"context": "$.response",
					"metaName": "Next"
				}
			},
			"metaMethod": "Set HTTP Response"
		},
		"OpenWeatherAPI.1": {
			"type": "nodehandler://@axway/api-builder-plugin-fn-swagger/OpenWeatherAPI",
			"name": "Get Weather for City",
			"method": "Get Weather for City",
			"parameters": [
				{
					"name": "q",
					"type": "jsonpath",
					"value": "$.cityAndCountry",
					"metaName": "q",
					"metaDescription": "city name and country code divided by comma, use ISO 3166 country codes"
				}
			],
			"outputs": {
				"200": {
					"routes": [
						"doT.1"
					],
					"context": "$.response.weatherInfo",
					"metaName": "200"
				},
				"default": {
					"routes": [
						"doT.1"
					],
					"context": "$.response.weatherInfo",
					"metaName": "Default"
				},
				"error": {
					"routes": [
						"http.1"
					],
					"context": "$.error",
					"metaName": "Error"
				}
			},
			"authorizations": [
				{
					"name": "APPID",
					"type": "credential",
					"value": "Open Weather API API APPID"
				}
			],
			"metaMethod": "Get Weather for City"
		},
		"IPAPI.1": {
			"type": "nodehandler://@axway/api-builder-plugin-fn-swagger/IPAPI",
			"name": "Get Location for IP",
			"method": "getByIpAddress",
			"parameters": [
				{
					"name": "ipAddress",
					"type": "jsonpath",
					"value": "$.params.ip",
					"metaName": "ipAddress"
				}
			],
			"outputs": {
				"200": {
					"context": "$.response.locationInfo",
					"routes": [
						"condition.1"
					],
					"metaName": "200"
				},
				"default": {
					"context": "$.response.locationInfo",
					"routes": [],
					"metaName": "Default"
				},
				"error": {
					"context": "$.error",
					"routes": [
						"http.1"
					],
					"metaName": "Error"
				}
			},
			"metaMethod": "getByIpAddress"
		},
		"doT.1": {
			"type": "nodehandler://@axway/api-builder-plugin-fn-dot/doT",
			"name": "Format response",
			"method": "formatStr",
			"parameters": [
				{
					"name": "data",
					"type": "jsonpath",
					"value": "$",
					"metaName": "data",
					"metaDescription": "The data to evaluate the template with. Use $ to access the entire context."
				},
				{
					"name": "template",
					"type": "string",
					"value": "\"{\\n  \\\"event\\\": \\\"W-JAX 2019\\\",\\n  \\\"city\\\": \\\"{{=it.response.locationInfo.data.city}}\\\", \\n  \\\"country\\\": \\\"{{=it.response.locationInfo.data.country}}\\\", \\n  \\\"country_code\\\": \\\"{{=it.response.locationInfo.data.countryCode}}\\\", \\n  \\\"coord\\\": {\\n    \\\"lon\\\": {{=it.response.locationInfo.data.lon}},\\n    \\\"lat\\\": {{=it.response.locationInfo.data.lat}}\\n  },\\n  \\\"weather\\\": [\\n    {\\n      \\\"id\\\": {{=it.response.weatherInfo.data.weather[0].id}},\\n      \\\"main\\\": \\\"{{=it.response.weatherInfo.data.weather[0].main}}\\\",\\n      \\\"description\\\": \\\"{{=it.response.weatherInfo.data.weather[0].description}}\\\",\\n      \\\"icon\\\": \\\"{{=it.response.weatherInfo.data.weather[0].icon}}\\\"\\n    }\\n  ],\\n  \\\"wind\\\": {\\n    \\\"speed\\\": {{=it.response.weatherInfo.data.wind.speed}},\\n    \\\"deg\\\": {{=it.response.weatherInfo.data.wind.deg}}\\n  },\\n  \\\"clouds\\\": {\\n    \\\"all\\\": {{=it.response.weatherInfo.data.clouds.all}}\\n  }\\n}\"",
					"metaName": "template",
					"metaDescription": "The doT template."
				}
			],
			"outputs": {
				"next": {
					"routes": [
						"http.setresponse.1"
					],
					"context": "$.finalResponse",
					"metaName": "Next"
				},
				"error": {
					"routes": [
						"http.1"
					],
					"context": "$.error",
					"metaName": "Error"
				}
			},
			"metaMethod": "Format string"
		},
		"doT.2": {
			"type": "nodehandler://@axway/api-builder-plugin-fn-dot/doT",
			"name": "Extract location info",
			"method": "formatStr",
			"parameters": [
				{
					"name": "data",
					"type": "jsonpath",
					"value": "$",
					"metaName": "data",
					"metaDescription": "The data to evaluate the template with. Use $ to access the entire context."
				},
				{
					"name": "template",
					"type": "string",
					"value": "\"{{=it.response.locationInfo.data.city}},{{=it.response.locationInfo.data.countryCode}}\"",
					"metaName": "template",
					"metaDescription": "The doT template."
				}
			],
			"outputs": {
				"next": {
					"routes": [
						"OpenWeatherAPI.1"
					],
					"context": "$.cityAndCountry",
					"metaName": "Next"
				},
				"error": {
					"routes": [
						"http.1"
					],
					"context": "$.error",
					"metaName": "Error"
				}
			},
			"metaMethod": "Format string"
		},
		"http.1": {
			"type": "nodehandler://axway-flow/http",
			"name": "Bad request 400",
			"method": "setresponse",
			"parameters": [
				{
					"name": "status",
					"type": "number",
					"value": "400",
					"metaName": "status",
					"metaDescription": "The HTTP status code"
				},
				{
					"name": "body",
					"type": "jsonpath",
					"value": "$.error",
					"metaName": "body",
					"metaDescription": "The response payload"
				}
			],
			"outputs": {
				"next": {
					"context": "$.response",
					"routes": [],
					"metaName": "Next"
				}
			},
			"metaMethod": "Set HTTP Response"
		},
		"condition.1": {
			"type": "nodehandler://axway-flow/condition",
			"name": "Location found?",
			"method": "equals",
			"parameters": [
				{
					"name": "source",
					"type": "jsonpath",
					"value": "$.response.locationInfo.data.status",
					"metaName": "source",
					"metaDescription": "The input to test."
				},
				{
					"name": "value",
					"type": "string",
					"value": "\"success\"",
					"metaName": "value",
					"metaDescription": "The value to test input against."
				}
			],
			"outputs": {
				"true": {
					"routes": [
						"doT.2"
					],
					"context": "$.equals",
					"metaName": "True"
				},
				"false": {
					"routes": [
						"http.1"
					],
					"context": "$.equals",
					"metaName": "False"
				}
			},
			"metaMethod": "Equals"
		}
	}
}